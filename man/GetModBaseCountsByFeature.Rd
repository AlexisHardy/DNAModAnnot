% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModAnnot.R
\name{GetModBaseCountsByFeature}
\alias{GetModBaseCountsByFeature}
\title{GetModBaseCountsByFeature Function (ModAnnot)}
\usage{
GetModBaseCountsByFeature(
  grangesAnnotations,
  grangesModPos,
  gposModTargetBasePos,
  lIgnoreStrand = FALSE
)
}
\arguments{
\item{grangesAnnotations}{A GRanges object containing the annotation for the genome assembly
corresponding to the grangesModPos and gposModTargetBasePos provided. The Genomic features categories must be in a column named "type".}

\item{grangesModPos}{A GRanges object containing Modifications Positions data to be counted.}

\item{gposModTargetBasePos}{A GRanges or GPos object containing Base Positions (which can be targeted by the modification) to be counted.}

\item{lIgnoreStrand}{If TRUE, Mod and Base will be counted independently of the strand of each feature. If FALSE, only Mod and Base
on the same strand as the feature will be counted. Defaults to FALSE.}
}
\value{
A GRanges object based on grangesAnnotations with the counts:
\itemize{
  \item Modcount:           The number of "Mod"  within this feature.
  \item Modcount_perkbp:   (The number of "Mod"  within this feature divided by the size of the feature)*1000.
  \item Basecount:          The number of "Base" within this feature.
  \item Basecount_perkbp:  (The number of "Base" within this feature divided by the size of the feature)*1000.
}
}
\description{
Return the Annotation provided with the counts (and counts per KiloBase pairs (kbp)) of
the base modified (Mod) and the base letter of the modified base (Base).
Example: for Mod="6mA", Base="A"; for Mod="5mC", Base="C".
}
\examples{
# loading genome
myGenome <- Biostrings::readDNAStringSet(system.file(
  package = "DNAModAnnot", "extdata",
  "ptetraurelia_mac_51_sca171819.fa"
))

# loading annotation
library(rtracklayer)
myAnnotations <- readGFFAsGRanges(system.file(
  package = "DNAModAnnot", "extdata",
  "ptetraurelia_mac_51_annotation_v2.0_sca171819.gff3"
))

# Preparing a grangesPacBioGFF and a grangesPacBioCSV datasets
myGrangesPacBioGFF <-
  ImportPacBioGFF(
    cPacBioGFFPath = system.file(
      package = "DNAModAnnot", "extdata",
      "ptetraurelia.modifications.sca171819.gff"
    ),
    cNameModToExtract = "m6A",
    cModNameInOutput = "6mA",
    cContigToBeAnalyzed = names(myGenome)
  )
myGposPacBioCSV <-
  ImportPacBioCSV(
    cPacBioCSVPath = system.file(
      package = "DNAModAnnot", "extdata",
      "ptetraurelia.bases.sca171819.csv"
    ),
    cSelectColumnsToExtract = c(
      "refName", "tpl", "strand", "base",
      "score", "ipdRatio", "coverage"
    ),
    lKeepExtraColumnsInGPos = TRUE, lSortGPos = TRUE,
    cContigToBeAnalyzed = names(myGenome)
  )

# Retrieve annotations with "Mod" and "Base" counts (and counts per kbp)
myAnn_ModBase_counts <- GetModBaseCountsByFeature(
  grangesAnnotations = myAnnotations,
  grangesModPos = myGrangesPacBioGFF,
  gposModTargetBasePos = myGposPacBioCSV
)
myAnn_ModBase_counts
}
\keyword{GetModBaseCountsByFeature}
