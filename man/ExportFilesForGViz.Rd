% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModAnnot.R
\name{ExportFilesForGViz}
\alias{ExportFilesForGViz}
\title{ExportFilesForGViz Function (ModAnnot)}
\usage{
ExportFilesForGViz(
  dnastringsetGenome,
  cFileNames,
  listObjects,
  cFileFormats,
  cBigwigParameters = rep(NA, length(cFileNames)),
  lBigwigParametersByStrand = rep(NA, length(cFileNames)),
  cBamXaParameters = rep(NA, length(cFileNames))
)
}
\arguments{
\item{dnastringsetGenome}{A DNAStringSet object containing the sequence for each contig.}

\item{cFileNames}{A character vector giving the names of the files to be exported.}

\item{listObjects}{A list of objects to be exported.
Required format of the objects is described in "cFileFormats" argument documentation.}

\item{cFileFormats}{A character vector giving the format for each file to be exported.
The following exportation formats are supported:
\itemize{
  \item Fasta  using DNAStrinSet  object : for sequenceTracks (streaming)
  \item Bam    using GRanges-like object : for alignmentTracks (streaming) (only the positions of the ranges will be retrieved) or
  for dataTracks (streaming) (only coverage of provided ranges will be displayed) or
  for annotationTracks (streaming) (positions of the ranges will be retrieved with the names of each range (e.g. gene name))
  \item bw (bigwig) using GRanges-like object : for dataTracks (streaming) (only the chosen numeric parameter will be
  retrieved for each range provided)
  \item gff3   using GRanges-like object : for annotationTracks or geneRegionTracks
  (not in streaming: more memory required for displaying)
}}

\item{cBigwigParameters}{A character vector describing the name of the parameter to be stored in bigwig files.
Must correspond to the name of a column in the provided Granges object.
Use NA as value in the vector if the associated file is not to be exported as a bigwig.
Defaults to "rep(NA, length(cFileNames)))"}

\item{lBigwigParametersByStrand}{A logical vector: if TRUE, the bigwig parameter will be negative
for each range that is located on the reverse strand in the GRanges object provided.
Use NA as value in the vector if the associated file is not to be exported as a bigwig.
Defaults to "rep(NA, length(cFileNames)))"}

\item{cBamXaParameters}{A character vector describing a parameter to be stored as a "Xa" optional field
in the exported bam file.
Use NA as value in the vector if the associated file is not to be exported as a bam.
If the exported file is a bam and if the value is NA or NULL, the bam will be exported without the "Xa" optional field.
Defaults to "rep(NA, length(cFileNames)))"}
}
\description{
Export data as files that can be directly used with Gviz Package (making tracks + displaying).
Except for gff3 format, all available format allows streaming while making and displaying tracks with Gviz package.
Multiple objects can be exported at the same time. All arguments (except "dnastringsetGenome" argument) must have the same length.
}
\examples{
# loading genome
myGenome <- Biostrings::readDNAStringSet(system.file(
  package = "DNAModAnnot", "extdata",
  "ptetraurelia_mac_51_sca171819.fa"
))

# Preparing a grangesPacBioCSV dataset
myGposPacBioCSV <-
  ImportPacBioCSV(
    cPacBioCSVPath = system.file(
      package = "DNAModAnnot", "extdata",
      "ptetraurelia.bases.sca171819.csv"
    ),
    cSelectColumnsToExtract = c(
      "refName", "tpl", "strand", "base",
      "score", "ipdRatio", "coverage"
    ),
    lKeepExtraColumnsInGPos = TRUE, lSortGPos = TRUE,
    cContigToBeAnalyzed = names(myGenome)
  )

## NOT RUN!
## Export files for Gviz
# ExportFilesForGViz(dnastringsetGenome = myGenome,
#                   cFileNames = c("ipdRatio_for_each_A.bw",
#                                  "score_for_all_bases.bw",
#                                  "newFastaOnlyscaffold51_17.fa"),
#                   listGRangesObjects = c(myGposPacBioCSV[myGposPacBioCSV$base == "A"],
#                                          myGposPacBioCSV,
#                                          myGenome["scaffold51_17"]),
#                   cFileFormats = c("bw", "bw", "fa"),
#                   cBigwigParameters = c("ipdRatio", "score", NA),
#                   lBigwigParametersByStrand = c(TRUE, TRUE, NA),
#                   cBamXaParameters = c(NA, NA, NA))

# loading annotation
library(rtracklayer)
myAnnotations <- readGFFAsGRanges(system.file(
  package = "DNAModAnnot", "extdata",
  "ptetraurelia_mac_51_annotation_v2.0_sca171819.gff3"
))

## NOT RUN!
## Export files for Gviz
# ExportFilesForGViz(dnastringsetGenome = myGenome,
#                   cFileNames = c("genes.bam"),
#                   listGRangesObjects = list(myAnnotations[myAnnotations$type == "gene"]),
#                   cFileFormats = c("bam"),
#                   cBamXaParameters = c("Name") )
}
\keyword{ExportFilesForGViz}
