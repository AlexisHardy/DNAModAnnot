% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GloModAn.R
\name{DrawModLogo}
\alias{DrawModLogo}
\title{DrawModLogo Function (GloModAn)}
\usage{
DrawModLogo(
  dnastringsetSeqAroundMod,
  cLogoType = "EDLogo",
  nGenomicBgACGT = c(0.25, 0.25, 0.25, 0.25),
  cColorsCTAG = c("orange2", "green3", "red2", "blue2")
)
}
\arguments{
\item{dnastringsetSeqAroundMod}{A DNAStringSet object containing the sequence around each DNA modification.
All these sequences must have the same size and the modification must have the same position in each sequence (example: at the center).}

\item{cLogoType}{Can be "Logo" or "EDLogo". Defaults to "EDLogo".
\itemize{
  \item Logo: A classic logo showing sequence enrichment around the modification.
  \item EDLogo: A logo showing sequence enrichment and depletion around the modification.
}}

\item{nGenomicBgACGT}{A numeric vector giving the background to be corrected with the genomic composition
in Adenine (A) then Cytosine (C) then Guanine (G) then Thymine (T). Defaults to c(0.25, 0.25, 0.25, 0.25).}

\item{cColorsCTAG}{A character vector giving the color for the Cytosine (C) then Thymine (T) then
Adenine (A) then Guanine (G) letters on the plot. Defaults to c("orange2","green3","red2","blue2").}
}
\description{
Return a plot describing the sequence motif associated to the sequences provided.
Sequences that do not have full width and sequences that have some
N or some gaps "-" are automatically removed before drawing the sequence plot.
If a position is fixed with one base only, that position will not be corrected with
the background in order to avoid other letters to appear below this base if using cLogoType="EDLogo".
}
\examples{
#loading genome
myGenome <- Biostrings::readDNAStringSet(system.file(package="DNAModAnnot", "extdata",
                                         "ptetraurelia_mac_51_sca171819.fa"))
myGrangesGenome <- GetGenomeGRanges(myGenome)

#Preparing a grangesPacBioGFF datasets
myGrangesPacBioGFF <-
   ImportPacBioGFF(cPacBioGFFPath = system.file(package="DNAModAnnot", "extdata",
                                 "ptetraurelia.combinationC_merged_sca171819_sample.gff"),
                                 cNameModToExtract = "m6A",
                                 cModNameInOutput = "6mA",
                                 cContigToBeAnalyzed = names(myGenome))

#Retrieve GRanges with sequence
myPositions_Mod_Granges_wSeq <- GetGRangesWindowSeqandParam(grangesData=myGrangesPacBioGFF,
                                                            grangesGenome = myGrangesGenome,
                                                            dnastringsetGenome = myGenome,
                                                            nUpstreamBpToAdd = 5,
                                                            nDownstreamBpToAdd = 5)

DrawModLogo(dnastringsetSeqAroundMod = as(myPositions_Mod_Granges_wSeq$sequence,"DNAStringSet"),
                   cLogoType = "EDLogo",
                   nGenomicBgACGT = c(0.35, 0.15, 0.15, 0.35))
}
\keyword{DrawModLogo}
