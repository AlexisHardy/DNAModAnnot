width(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)
width(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif) > 0L
width(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif) > 0
sum(width(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)) > 0
width(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif) > 0
motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif
motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif > 0
is.null(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)
is.null(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[2]])
is.null(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[3]])
is.null(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[4]])
isEmpty(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[4]])
isEmpty(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[2]])
isEmpty(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)
width(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)
width(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[1])
length(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)
lengths(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)
lengths(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif) > 0
lengths
lengths(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif) > 0
motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[lengths(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif) > 0]
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
# Extract Mod Data by motif over-represented (at least % of motifs)
motif_pct_and_PacBioGFF_grangeslist <- ExtractQuantifByModMotif(
grangesPacBioGFF = PacBioGFF_granges_filt2,
grangesGenome = ptetraurelia_genome_range,
dnastringsetGenome = ptetraurelia_genome,
nUpstreamBpToAdd = 0, nDownstreamBpToAdd = 1,
nModMotifMinProp = 0.05,
cBaseLetterForMod = "A",
cModNameInOutput = "6mA"
)
motif_pct_and_PacBioGFF_grangeslist
PacBioGFF_grangeslist_filt <- FiltPacBio(
grangesPacBioGFF = motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif,
listFdrEstByThrIpdRatio = NULL,
listFdrEstByThrScore = score_fdr_by_motif_limit
)$gff
motif_pct_and_PacBioGFF_grangeslist
length(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)
lapply(1:length(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif), function(x){
#seqlevels(grangesPacBioGFF[[x]]) <-
seqlevelsInUse(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[x]])
})
for(x in 1:length(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif){
seqlevels(grangesPacBioGFF[[x]]) <-
seqlevelsInUse(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[x]])
})
for(x in 1:length(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)){
seqlevels(grangesPacBioGFF[[x]]) <-
seqlevelsInUse(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[x]])
}
for(x in 1:length(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif)){
seqlevels(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[x]]) <-
seqlevelsInUse(motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif[[x]])
}
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
PacBioGFF_grangeslist_filt <- FiltPacBio(
grangesPacBioGFF = motif_pct_and_PacBioGFF_grangeslist$GRangesbyMotif,
listFdrEstByThrIpdRatio = NULL,
listFdrEstByThrScore = score_fdr_by_motif_limit
)$gff
PacBioGFF_grangeslist_filt
# Select one motif for the analysis by motif
motifs_base <- motif_pct_and_PacBioGFF_grangeslist$motifs_to_analyse[motif_pct_and_PacBioGFF_grangeslist$motifs_to_analyse == "AT"]
motifs_modifications <- motif_pct_and_PacBioGFF_grangeslist$mod_motif[motifs_base == motif_pct_and_PacBioGFF_grangeslist$motifs_to_analyse]
PacBioGFF_granges_filtAT <- PacBioGFF_grangeslist_filt[[motifs_base]]
BaseCSV_granges_filtAT <- BaseCSV_granges_with_sequence[BaseCSV_granges_with_sequence$sequence == motifs_base, ]
# Loading GFF annotation file (Minimum annotation required: gene (seqnames, start, end, strand))
annotations_path <- system.file(package = "DNAModAnnot", "extdata", "ptetraurelia_mac_51_annotation_v2.0_sca171819.gff3")
annotations_range <- rtracklayer::readGFFAsGRanges(annotations_path)
annotations_range <- PredictMissingAnnotation(
grangesAnnotations = annotations_range,
grangesGenome = ptetraurelia_genome_range,
cFeaturesColName = "type",
cGeneCategories = c("gene"),
lAddIntronRangesUsingExon = TRUE
)
# Mod annotation by feature
annotations_range_ModBase_counts <- GetModBaseCountsByFeature(
grangesAnnotations = annotations_range,
grangesPacBioGFF = PacBioGFF_granges_filtAT,
gposPacBioCSVBase = BaseCSV_granges_filtAT,
lIgnoreStrand = FALSE
)
DrawModBasePropByFeature(
grangesAnnotationsWithCounts = annotations_range_ModBase_counts,
cFeaturesToCompare = c("gene", "intergenic"),
lUseCountsPerkbp = TRUE,
cBaseMotif = motifs_base,
cModMotif = motifs_modifications
)
# Loading additional Data: RNA-seq dataset
expression_file_path <- system.file(package = "DNAModAnnot", "extdata", "ptetraurelia.whole_gene_expression.multiple_timepoints_sca171819.tsv")
expression_dataframe <- read.table(
file = expression_file_path,
header = TRUE, sep = "\t", dec = ",",
quote = "\"", fill = FALSE
)
expression_dataframe <- expression_dataframe[, c("ID", "T30")]
# merge RNA-seq data with Annotation GRanges object
annotations_range_ModBase_counts_param <- annotations_range_ModBase_counts
GenomicRanges::mcols(annotations_range_ModBase_counts_param) <- merge(
x = GenomicRanges::mcols(annotations_range_ModBase_counts_param),
by.x = "Name",
y = expression_dataframe,
by.y = "ID"
)
# Comparison of quantitative parameter with Mod annotation
DrawParamPerModBaseCategories(
grangesAnnotationsWithCounts = annotations_range_ModBase_counts_param,
cParamColname = "T30",
cParamFullName = "Gene expression at T30",
cParamYLabel = "Normalized RNA-seq read counts (T30)",
cSelectFeature = "gene",
lUseCountsPerkbp = TRUE,
cBaseMotif = motifs_base,
cModMotif = motifs_modifications,
lBoxPropToCount = FALSE
)
# Mod annotation within feature
gene_annotation_range <- annotations_range[annotations_range$type == "gene", ]
gene_annotation_range <- GetModBaseCountsWithinFeature(
grangesAnnotations = gene_annotation_range,
grangesPacBioGFF = PacBioGFF_granges_filtAT,
grangesPacBioCSVBase = BaseCSV_granges_filtAT,
lIgnoreStrand = FALSE,
nWindowsNb = 20
)
DrawModBaseCountsWithinFeature(
grangesAnnotationsWithCountsByWindow = gene_annotation_range,
cFeatureName = "gene",
cBaseMotif = motifs_base,
cModMotif = motifs_modifications
)
# ModBase distance from feature/feature limit
ModBase_distance_feature_grangeslist <- GetModBaseDistFromFeature(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesPacBioGFF = PacBioGFF_granges_filtAT,
grangesPacBioCSVBase = BaseCSV_granges_filtAT,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
counts_by_distance_list <- GetListCountsByDist(
listGRangesModBaseDist = ModBase_distance_feature_grangeslist,
lAddCorrectedDistFrom5pTo3p = TRUE
)
DrawModBasePropDistFromFeature(
listModBaseCountsDistDataframe = counts_by_distance_list,
cFeaturePosNames = c("TSS", "TTS"),
cBaseMotif = motifs_base,
cModMotif = motifs_modifications
)
# ModBase and Reads center (from Bam file) distance from feature/feature limit
bamfile_path <- system.file(package = "DNAModAnnot", "extdata", "PTET_MonoNuc_3-2new_CTTGTA.BOWTIE.pt_51.pe.sca171819_sample.sorted.bam")
bamfile_object <- Rsamtools::BamFile(file = bamfile_path)
bamfile_ranges <- as(GenomicAlignments::readGAlignments(bamfile_object), "GRanges")
bamfile_ranges <- as(GenomicAlignments::readGAlignments(bamfile_object), "GRanges")
bamfile_ranges <- GetGposCenterFromGRanges(grangesData = bamfile_ranges)
counts_by_distance_list_bamfile <- GetPosDistFromFeature(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = bamfile_ranges,
cWhichStrandVsFeaturePos = "both",
nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
AddToModBasePropDistFromFeaturePlot(
dPosCountsDistFeatureStart = counts_by_distance_list_bamfile[[1]],
dPosCountsDistFeatureEnd = counts_by_distance_list_bamfile[[2]],
cSubtitleContent = "Along with nucleosome center distance (MonoNuc_3-2newreplicate)",
cParamYLabel = "Nucleosome center count (MonoNuc_3-2newreplicate)",
cParamColor = "cyan3",
lAddAxisOnLeftSide = TRUE
)
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
Mod_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = PacBioGFF_granges_filtAT,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = TRUE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
Mod_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = PacBioGFF_granges_filtAT,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = TRUE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
Mod_distance_feature_countslist
Mod_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = PacBioGFF_granges_filtAT,
lGetGRangesInsteadOfListCounts = TRUE,
lGetPropInsteadOfCounts = TRUE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
Mod_distance_feature_countslist
Mod_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = PacBioGFF_granges_filtAT,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = TRUE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
Base_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = BaseCSV_granges_filtAT,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = TRUE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
Base_distance_feature_countslist
DrawModBasePropDistFromFeature(
listModCountsDistDataframe = Mod_distance_feature_countslist,
listBaseCountsDistDataframe = Base_distance_feature_countslist,
cFeaturePosNames = c("TSS", "TTS"),
cBaseMotif = motifs_base,
cModMotif = motifs_modifications
)
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
DrawModBasePropDistFromFeature(
listModCountsDistDataframe = Mod_distance_feature_countslist,
listBaseCountsDistDataframe = Base_distance_feature_countslist,
cFeaturePosNames = c("TSS", "TTS"),
cBaseMotif = motifs_base,
cModMotif = motifs_modifications
)
# ModBase and Reads center (from Bam file) distance from feature/feature limit
bamfile_path <- system.file(package = "DNAModAnnot", "extdata", "PTET_MonoNuc_3-2new_CTTGTA.BOWTIE.pt_51.pe.sca171819_sample.sorted.bam")
bamfile_object <- Rsamtools::BamFile(file = bamfile_path)
bamfile_ranges <- as(GenomicAlignments::readGAlignments(bamfile_object), "GRanges")
bamfile_ranges <- GetGposCenterFromGRanges(grangesData = bamfile_ranges)
bamfile_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = bamfile_ranges,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = FALSE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
AddToModBasePropDistFromFeaturePlot(
dPosCountsDistFeatureStart = bamfile_distance_feature_countslist[[1]],
dPosCountsDistFeatureEnd = bamfile_distance_feature_countslist[[2]],
cSubtitleContent = "Along with nucleosome center distance (MonoNuc_3-2newreplicate)",
cParamYLabel = "Nucleosome center count (MonoNuc_3-2newreplicate)",
cParamColor = "cyan3",
lAddAxisOnLeftSide = TRUE
)
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
# ModBase distance from feature/feature limit
Mod_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = PacBioGFF_granges_filtAT,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = TRUE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
Base_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = BaseCSV_granges_filtAT,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = TRUE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
DrawModBasePropDistFromFeature(
listModCountsDistDataframe = Mod_distance_feature_countslist,
listBaseCountsDistDataframe = Base_distance_feature_countslist,
cFeaturePosNames = c("TSS", "TTS"),
cBaseMotif = motifs_base,
cModMotif = motifs_modifications
)
# ModBase and Reads center (from Bam file) distance from feature/feature limit
bamfile_path <- system.file(package = "DNAModAnnot", "extdata", "PTET_MonoNuc_3-2new_CTTGTA.BOWTIE.pt_51.pe.sca171819_sample.sorted.bam")
bamfile_object <- Rsamtools::BamFile(file = bamfile_path)
bamfile_ranges <- as(GenomicAlignments::readGAlignments(bamfile_object), "GRanges")
bamfile_ranges <- GetGposCenterFromGRanges(grangesData = bamfile_ranges)
bamfile_distance_feature_countslist <- GetDistFromFeaturePos(
grangesAnnotations = annotations_range,
cSelectFeature = "gene",
grangesData = bamfile_ranges,
lGetGRangesInsteadOfListCounts = FALSE,
lGetPropInsteadOfCounts = FALSE,
cWhichStrandVsFeaturePos = "both", nWindowSizeAroundFeaturePos = 600,
lAddCorrectedDistFrom5pTo3p = TRUE,
cFeaturePosNames = c("TSS", "TTS")
)
DrawModBasePropDistFromFeature(
listModCountsDistDataframe = Mod_distance_feature_countslist,
listBaseCountsDistDataframe = Base_distance_feature_countslist,
cFeaturePosNames = c("TSS", "TTS"),
cBaseMotif = motifs_base,
cModMotif = motifs_modifications
)
AddToModBasePropDistFromFeaturePlot(
dPosCountsDistFeatureStart = bamfile_distance_feature_countslist[[1]],
dPosCountsDistFeatureEnd = bamfile_distance_feature_countslist[[2]],
cSubtitleContent = "Along with nucleosome center distance (MonoNuc_3-2newreplicate)",
cParamYLabel = "Nucleosome center count (MonoNuc_3-2newreplicate)",
cParamColor = "cyan3",
lAddAxisOnLeftSide = TRUE
)
mcols(annotations_range)[, "type"]
library(DNAModAnnot)
# Modif ratio by scaffold and by strand
contig_modification_ratio <- GetModRatioByContigTEST(PacBioGFF_granges_filt1,
PacBioCSV_gpos_filt1[PacBioCSV_gpos_filt1$base == "A"],
dnastringsetGenome = ptetraurelia_genome,
cBaseLetterForMod = "A"
)
contig_modification_ratio$f_strand$Mod_ratio
contig_modification_ratio$f_strand["Mod_ratio"]
contig_modification_ratio$f_strand[["Mod_ratio"]]
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
contig_mean_frac <- GetMeanParamByContig(
grangesData = PacBioCSV_gpos_filt1,
dnastringsetGenome = ptetraurelia_genome,
cParamName = "frac"
)
PacBioCSV_gpos_filt1
contig_mean_frac <- GetMeanParamByContig(
grangesData = PacBioGFF_granges_filt1,
dnastringsetGenome = ptetraurelia_genome,
cParamName = "frac"
)
contig_mean_frac
PacBioGFF_granges_filt1
contig_mean_frac
tmp_test <- FiltParam(grangesModPos = PacBioGFF_granges_filt1,
cParamName = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.1,
nContigFiltParamLoBound = 0.1)
tmp_test
PacBioGFF_granges_filt1
contig_mean_frac$f_strand
tmp_test <- FiltParam(grangesModPos = PacBioGFF_granges_filt1,
cParamName = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.01,
nContigFiltParamLoBound = 0.01)
tmp_test
tmp_test <- FiltParam(grangesModPos = PacBioGFF_granges_filt1,
cParamName = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
tmp_test <- FiltPacBio(grangesPacBioGFF = PacBioGFF_granges_filt1,
cParamName = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test
tmp_test <- FiltPacBio(grangesPacBioGFF = PacBioGFF_granges_filt1,
cParamName = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)$gff
tmp_test
tmp_test <- FiltFraction(grangesModPos = PacBioGFF_granges_filt1,
cParamName = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test <- FiltParam(grangesModPos = PacBioGFF_granges_filt1,
cParamName = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test
tmp_test <- FiltPacBio(grangesPacBioGFF = PacBioGFF_granges_filt1,
cParamNameForFilter = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
#to be added instead of mean frac old function
contig_mean_frac <- GetMeanParamByContig(
grangesData = PacBioGFF_granges_filt1,
dnastringsetGenome = ptetraurelia_genome,
cParamName = "frac"
)
tmp_test <- FiltPacBio(grangesPacBioGFF = PacBioGFF_granges_filt1,
cParamNameForFilter = "frac", lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test
tmp_test <- FiltPacBio(grangesPacBioGFF = PacBioGFF_granges_filt1,
cParamNameForFilter = "frac",
lFiltParam = TRUE,
nFiltParamLoBoundaries = 0, nFiltParamUpBoundaries = 1,
cFiltParamBoundariesToInclude = "upperOnly",
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test
tmp_test <- FiltPacBio(grangesPacBioGFF = PacBioGFF_granges_filt1,
cParamNameForFilter = "frac",
lFiltParam = FALSE,
listMeanParamByContig = contig_mean_frac,
nContigFiltParamUpBound = 0.05,
nContigFiltParamLoBound = 0.05)
tmp_test
gc()
gposDeepSignalModBase <- ImportDeepSignalModFrequency(cDeepSignalModPath="D:/WORK/SD_Lab/Nanopore_test/Notts.FAB39088-288418386_SingleAll.CpG.call_mods.frequency.tsv",
lSortGPos=TRUE,
cContigToBeAnalyzed = "all")
gc()
library(DNAModAnnot)
gposDeepSignalModBase <- ImportDeepSignalModFrequency(cDeepSignalModPath="D:/WORK/SD_Lab/Nanopore_test/Notts.FAB39088-288418386_SingleAll.CpG.call_mods.frequency.tsv",
lSortGPos=TRUE,
cContigToBeAnalyzed = "all")
library(devtools)
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
library(DNAModAnnot)
gposDeepSignalModBase <- ImportDeepSignalModFrequency(cDeepSignalModPath="D:/WORK/SD_Lab/Nanopore_test/Notts.FAB39088-288418386_SingleAll.CpG.call_mods.frequency.tsv",
lSortGPos=TRUE,
cContigToBeAnalyzed = "all")
gposDeepSignalModBase <- head(gposDeepSignalModBase, 1000000)
#1st split
gposDeepSignalMod <- FiltDeepSignal(gposDeepSignalModBase = as(gposDeepSignalModBase, "GRanges"),
cParamNameForFilter = "frac",
lFiltParam = TRUE,
nFiltParamLoBoundaries = 0,
nFiltParamUpBoundaries = 1,
cFiltParamBoundariesToInclude = "upperOnly")$Mod
#1st split
gposDeepSignalMod <- FiltDeepSignal(gposDeepSignalModBase = as(gposDeepSignalModBase, "GRanges"),
cParamNameForFilter = "frac",
listMeanParamByContig = NULL,
lFiltParam = TRUE,
nFiltParamLoBoundaries = 0,
nFiltParamUpBoundaries = 1,
cFiltParamBoundariesToInclude = "upperOnly")$Mod
library(devtools)
devtools::document("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
devtools::install("D:/WORK/SD_Lab/DNAModAnnot_Working_Directory/DNAModAnnot")
library(DNAModAnnot)
#1st split
gposDeepSignalMod <- FiltDeepSignal(gposDeepSignalModBase = as(gposDeepSignalModBase, "GRanges"),
cParamNameForFilter = "frac",
listMeanParamByContig = NULL,
lFiltParam = TRUE,
nFiltParamLoBoundaries = 0,
nFiltParamUpBoundaries = 1,
cFiltParamBoundariesToInclude = "upperOnly")$Mod
gposDeepSignalMod
#1st split
gposDeepSignalMod <- FiltDeepSignal(gposDeepSignalModBase = as(gposDeepSignalModBase, "GRanges"),
cParamNameForFilter = "frac",
lFiltParam = TRUE,
nFiltParamLoBoundaries = 0,
nFiltParamUpBoundaries = 1,
cFiltParamBoundariesToInclude = "upperOnly")$Mod
